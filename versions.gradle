ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '3.1.4'
versions.greendao_gradle_plugin = "3.2.2"
versions.support = "28.0.0"
versions.navigation = "1.0.0"
versions.flexbox = "1.0.0"
versions.multidex = "1.0.3"
versions.junit = "4.12"
versions.runner = "1.0.2"
versions.espresso = "3.0.2"
versions.constraint_layout = "1.1.3"
versions.gson = "2.8.5"
versions.glide = "4.8.0"
versions.okhttp = "3.12.1"
versions.retrofit = "2.5.0"
versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"
versions.greendao = "3.2.2"
versions.sqlcipher = "3.5.7"
versions.bugly_nativecrashreport = "3.6.0.1"
versions.bugly_crashreport_upgrade = "1.3.6"
versions.tinker_support = "1.1.5"
versions.tinker = "1.9.11"
versions.tinker_avi = "2.1.3"
versions.wechat_with_mta = "5.1.6"
versions.amap = "6.6.0"
versions.amap_search = "6.5.0.1"
versions.amap_location = "4.5.0"
versions.lifecycle = "1.1.1"
versions.exoplayer = "2.9.3"
versions.aspectj = "1.9.1"
versions.netease = "6.5.0"
versions.leakcanary = "1.6.3"
versions.PhotoView = "2.1.4"

def deps = [:]

def support = [:]
support.appcompat = "com.android.support:appcompat-v7:$versions.support"
support.design = "com.android.support:design:$versions.support"
support.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
support.multidex = "com.android.support:multidex:$versions.multidex"
support.flexbox = "com.google.android:flexbox:$versions.flexbox"
support.cardview = "com.android.support:cardview-v7:$versions.support"
support.annotations = "com.android.support:support-annotations:$versions.support"
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
deps.support = support

def navigation = [:]
navigation.fragment = "android.arch.navigation:navigation-fragment:$versions.navigation"
navigation.ui = "android.arch.navigation:navigation-ui:$versions.navigation"
deps.navigation = navigation

def lifecycle = [:]
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.viewmodel = "android.arch.lifecycle:viewmodel:$versions.lifecycle"
lifecycle.livedata = "android.arch.lifecycle:livedata:$versions.lifecycle"
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
lifecycle.common_java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.reactivestreams = "android.arch.lifecycle:reactivestreams:$versions.lifecycle"
lifecycle.core_testing = "android.arch.core:core-testing:$versions.lifecycle"
deps.lifecycle = lifecycle

def test = [:]
test.junit = "junit:junit:$versions.junit"
test.runner = "com.android.support.test:runner:$versions.runner"
test.espresso = "com.android.support.test.espresso:espresso-core:$versions.espresso"
deps.test = test

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
deps.retrofit = retrofit

def okhttp = [:]
okhttp.runtime = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.urlconnection = "com.squareup.okhttp3:okhttp-urlconnection:$versions.okhttp"
okhttp.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
deps.okhttp = okhttp

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
glide.okhttp3_integration = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"
deps.glide = glide

//腾讯相关sdk
def tencent = [:]
tencent.nativecrashreport = "com.tencent.bugly:nativecrashreport:$versions.bugly_nativecrashreport"
tencent.crashreport_upgrade = "com.tencent.bugly:crashreport_upgrade:$versions.bugly_crashreport_upgrade"
tencent.tinker = "com.tencent.tinker:tinker-android-lib:$versions.tinker"
tencent.tinker_loader = "com.tencent.tinker:tinker-android-loader:$versions.tinker"

tencent.avi = "com.wang.avi:library:$versions.tinker_avi"
tencent.wechat = "com.tencent.mm.opensdk:wechat-sdk-android-with-mta:$versions.wechat_with_mta"
deps.tencent = tencent

//高德地图
def amap = [:]
amap.map3d = "com.amap.api:3dmap:$versions.amap"
amap.search = "com.amap.api:search:$versions.amap_search"
amap.location = "com.amap.api:location:$versions.amap_location"
deps.amap = amap

//exoplayer
def google = [:]
google.exoplayer = "com.google.android.exoplayer:exoplayer:$versions.exoplayer"
google.exoplayer_core = "com.google.android.exoplayer:exoplayer-core:$versions.exoplayer"
google.exoplayer_dash = "com.google.android.exoplayer:exoplayer-dash:$versions.exoplayer"
google.exoplayer_ui = "com.google.android.exoplayer:exoplayer-ui:$versions.exoplayer"
deps.google = google

def aspectj = [:]
aspectj.aspectjrt = "org.aspectj:aspectjrt:$versions.aspectj"
aspectj.aspectjtools = "org.aspectj:aspectjtools:$versions.aspectj"
deps.aspectj = aspectj

//网易即时通信
def netease = [:]
netease.basesdk = "com.netease.nimlib:basesdk:$versions.netease"
netease.nrtc = "com.netease.nimlib:nrtc:$versions.netease"
netease.avchat = "com.netease.nimlib:avchat:$versions.netease"
netease.chatroom = "com.netease.nimlib:chatroom:$versions.netease"
netease.rts = "com.netease.nimlib:rts:$versions.netease"
netease.lucene = "com.netease.nimlib:lucene:$versions.netease"
netease.push = "com.netease.nimlib:push:$versions.netease"
deps.netease = netease

def leakcanary = [:]
leakcanary.android = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
leakcanary.android_no_op = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"
// Optional, if you use support library fragments:
leakcanary.support_fragment = "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leakcanary"
deps.leakcanary = leakcanary

ext.deps = deps

deps.gson = "com.google.code.gson:gson:$versions.gson"

deps.photoview = "com.github.chrisbanes:PhotoView:$versions.PhotoView"

deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"

deps.greendao = "org.greenrobot:greendao:$versions.greendao"
deps.sqlcipher = "net.zetetic:android-database-sqlcipher:$versions.sqlcipher"

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.greendao_gradle_plugin = "org.greenrobot:greendao-gradle-plugin:$versions.greendao_gradle_plugin"
deps.tinker_support = "com.tencent.bugly:tinker-support:$versions.tinker_support"

ext.deps = deps


def build_versions = [:]
build_versions.compile_sdk = 28
build_versions.min_sdk = 16
build_versions.target_sdk = 27
ext.build_versions = build_versions

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.mavenCentral()
    handler.google()
    handler.jcenter()
    handler.maven { url "https://jitpack.io" }
    handler.maven { url "${rootDir}/.m2repository" }
}

ext.addRepos = this.&addRepos
